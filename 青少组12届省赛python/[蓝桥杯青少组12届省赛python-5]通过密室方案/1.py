'''提示信息∶
有一个密室逃脱游戏，有100间密室连在一排。密室编号是从1开始连续排列一直排到第100间密室，如下图：
游戏规则∶
1.玩家初始位置在1号密室;
2.每次玩家可以进入右边的一个密室，也可以跳过一个密室进入下个密室（如：当玩家当前在3号密室，他可以进入4号密室也可以进入5号密室）;
3. 有毒气的密室不能进入需要避开。
编程实现∶给定三个正整数X，Y，M（X<Y<M≤100），表示三个密室编号。X号密室和Y号密室有毒气泄漏，不能进入，玩家需要进入到M号密室。按照游戏规则进入M号密室有多少种路线方案。
例如∶X=2，Y=4，M=7，进入M号密室有2种路线方案，分别是1->3->5->6->7路线和1->3->5-7路线。
输入描述∶输入三个正整数X，Y，M（X<Y<M），X和Y表示有毒气密室编号，M表示需要进入的密室编号，且三个正整数之间以英文逗号隔开
输出描述∶输出进入M号密室有多少种路线方案
示例一
输入：
2,4,7
输出：
2
示例二
输入：
1,5,9
输出：
6
示例三
输入：
3,5,10
输出：
5'''
X_Y_M_lst = input().split(',')
X = int(X_Y_M_lst[0])-1
Y = int(X_Y_M_lst[1])-1
M = int(X_Y_M_lst[2])
Chamber_path = [0]*M
Chamber_path[0] = 1
Chamber_path[1] = 1
Chamber_path[X] = 0
Chamber_path[Y] = 0
for i in range(2,len(Chamber_path)):
    if i == X or i == Y:
        Chamber_path[i] = 0
    else:
        #1    2    3    4    5    6    7
        #     1    2    3    5    8    13
        #有毒气密室 例：X:4    Y:7    Z:10
        #1    2    3    4    5    6    7    8    9    10
        #1    1    2    0    2    2    0    2    2    4
        #当前密室的到达方法总和就是前两个密室的到达方法的总和
        Chamber_path[i] = Chamber_path[i-1]+Chamber_path[i-2]
print(Chamber_path[-1])
