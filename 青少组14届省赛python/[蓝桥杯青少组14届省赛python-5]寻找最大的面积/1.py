'''【编程实现】工人砌了一面奇特的砖墙，该墙由N列砖组成（1≤N≤106），且每列砖的数量为Ki（1≤Ki≤104，相邻两列砖之间无缝隙），每块砖的长宽高都为1。
小蓝为了美化这面墙，需要在这面墙中找到一块面积最大的矩形用于涂鸦，那么请你帮助小蓝找出最大矩形，并输出其面积。
例如：N = 6，表示这面墙有6列，每列砖的数量依次为3,2,1,5,6,2。
这面墙中面积最大的矩形，其面积为10。
【输入描述】
第一行输入一个正整数N (1<=N<=106)表示这面砖墙由几列砖组成
第二行输入N个正整数Ki (1<=Ki<=104)表示每列砖的数量，正整数之间以一个空格隔开
【输出描述】
输出一个正整数，表示最大矩形的面积
【样例输入】
6
3 2 1 5 6 2
【样例输出】
10
示例一
输入：
6
3 2 1 5 6 2
输出：
10
示例二
输入：
5
5 5 5 5 5
输出：
25'''
N = int(input())
li = input().split(' ')
for i in range(len(li)):
    li[i] = int(li[i])
su = 0
for i in range(len(li)):
    l = i
    r = i
    while True:#左指针的值
        if l == 0 or li[l-1] <li[i]:#超过边界或小于li[i](小于li[i]时拼接不成矩形)
            break
        l-=1
    while True:#右指针的值
        if r == len(li)-1 :#超过边界或小于li[i](小于li[i]时拼接不成矩形)
            break
        if li[r+1] < li[i]:
            break
        r+=1
    sun = li[i]*(r-l+1)#当前面积
    if sun>su :
        su = sun
print(su)
